###############################################################################
# Base Configuration; this provides sane defaults for commonly used parts.
# -----------------------------------------------------------------------------
#
# {{ ansible_managed }}
#
# Buildout instructions in this file are usually only changed by experienced
# developers.
#
# Beyond here there be dragons!
#
# For extensive comments, see the source for the Unified Installer:
# https://github.com/plone/Installers-UnifiedInstaller

[buildout]

###############################################################################
# Buildout cache directories
# -----------------------------------------------------------------------------
eggs-directory = {{ plone_version }}/buildout-cache/eggs
download-cache = {{ plone_version }}/buildout-cache/downloads
extends-cache = {{ plone_version }}/buildout-cache/extends


###############################################################################
# Configurations to extend
# -----------------------------------------------------------------------------
extends =
    http://dist.plone.org/release/{{ plone_version }}/versions.cfg
{% if plone_extra_extends %}
{% for link in plone_extra_extends %}
    {{ link }}
{% endfor %}
{% endif %}


###############################################################################
# Package versions
# -----------------------------------------------------------------------------
show-picked-versions = true
versions = versions


###############################################################################
# Package actuality
# -----------------------------------------------------------------------------
# Don't download new things unless needed to satisfy dependencies.
# Override this on the command line with the "-n" flag.
newest = false


###############################################################################
# Package status
# -----------------------------------------------------------------------------
# Pick final releases over newer development releases.
prefer-final = true


###############################################################################
# Package unzipping
# -----------------------------------------------------------------------------
# Uncomment to unzip all eggs for easier debugging.
# unzip = false


###############################################################################
# Download links for packages
# -----------------------------------------------------------------------------
# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads
    http://dist.plone.org/release/{{ plone_version }}
{% if plone_extra_find_links %}
{% for link in plone_extra_find_links %}
    {{ link }}
{% endfor %}
{% endif %}


###############################################################################
# Extensions
# -----------------------------------------------------------------------------
# buildout.sanitycheck makes sure you're not running buildout as root.
# mr.developer manages source packages.
extensions =
    buildout.sanitycheck
{% if plone_sources %}
    mr.developer
{% endif %}


###############################################################################
# User configuration
# -----------------------------------------------------------------------------
# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = {{ plone_user }}
# This user will own the rest of the installation, and should be used to
# run buildout.
buildout-user = {{ plone_user }}


###############################################################################
# Eggs
# -----------------------------------------------------------------------------
# Add an indented line to the eggs section for any Python eggs or packages you
# wish to include.
eggs =
    Plone
    Pillow
    Products.PloneHotfix20160419
{% if plone_version < '4.3.8' %}
    plone4.csrffixes
{% endif %}
{% if plone_additional_eggs %}
{% for egg in plone_additional_eggs %}
    {{ egg }}
{% endfor %}
{% endif %}


###############################################################################
# ZCML Slugs
# -----------------------------------------------------------------------------
# Some eggs need ZCML slugs to tell Zope to use them. This is increasingly
# rare.
zcml =
{% if plone_zcml_slugs %}
{% for slug in plone_zcml_slugs %}
    {{ slug }}
{% endfor %}
{% endif %}


###############################################################################
# var Directory
# -----------------------------------------------------------------------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
var-dir=${buildout:directory}/var


###############################################################################
# Backup Directory
# -----------------------------------------------------------------------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
backups-dir={{ plone_backup_path }}


###############################################################################
# Initial User
# -----------------------------------------------------------------------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=admin:{{ plone_initial_password }}


###############################################################################
# Debug Options
# -----------------------------------------------------------------------------
# Start Zope/Plone instances in "fg" mode to turn on debug mode; this will
# dramatically slow Plone.
#
# Add-on developers should turn deprecation warnings on.
deprecation-warnings = off
# Change verbose-security to "on" for useful security errors while developing.
verbose-security = off


###############################################################################
# Environment Variables
# -----------------------------------------------------------------------------
# Some of the behavior of your Zope/Plone instances are controlled with OS
# environment variables. You may set those here in a key / value format.
# Some common settings:
#    * TZ allows you to set a time zone for systems where it's not
#      automatically available.
#    * zope_i18n_compile_mo_files allows for automatic compilation of
#      missing translation files (may slow startup).
#    * zope_i18n_allowed_languages allows you to limit the available
#      translations.
#    * PYTHON_EGG_CACHE determines where zipped python packages are unpacked
#      for use.
#    * PYTHONHASHSEED determines initial seed for hashes. "random" causes a
#      pseudo-random value is used to seed the hashes of str, bytes and datetime
#      objects.
environment-vars =
    PYTHON_EGG_CACHE ${buildout:var-dir}/.python-eggs
{% if plone_environment_vars %}
{% for evar in plone_environment_vars %}
    {{ evar }}
{% endfor %}
{% endif %}


###############################################################################
# Parts Specification
# -------------------
# Specifies the components that should be included in the buildout. All the
# basics are in the base.cfg extension; you may add your own if you need them
# at the end of this file.
parts =
{% if plone_install_zeoserver %}
    zeoserver
{% endif %}
{% for client in range(1, plone_client_count | int + 1) %}
    client{{ client }}
{% endfor %}
    client_reserved
{% if plone_backup_path %}
    backup
{% endif %}
    zopepy
    precompiler
#     setpermissions

{% if plone_sources %}

###############################################################################
# mr.developer checkouts
# -----------------------------------------------------------------------------
auto-checkout = *
sources-dir = src
sources = sources

{% endif %}
{% if plone_buildout_extra %}

{{ plone_buildout_extra }}

{% endif %}

###############################################################################
# Backup Scripts
# -----------------------------------------------------------------------------
# This recipe builds the backup, restore and snapshotbackup commands.
# For options see http://pypi.python.org/pypi/collective.recipe.backup
[backup]
recipe = collective.recipe.backup
location = ${buildout:backups-dir}/backups
blobbackuplocation = ${buildout:backups-dir}/blobstoragebackups
snapshotlocation = ${buildout:backups-dir}/snapshotbackups
blobsnapshotlocation = ${buildout:backups-dir}/blobstoragesnapshots
datafs = ${buildout:var-dir}/filestorage/Data.fs
blob-storage = ${buildout:var-dir}/blobstorage
keep = {{ plone_keep_backups }}
keep_blob_days = {{ plone_keep_blob_days }}
rsync_options = {{ plone_rsync_backup_options }}
enable_zipbackup = true
blobziplocation = ${buildout:backups-dir}/blobstoragezips
ziplocation = ${buildout:backups-dir}/zipbackups


###############################################################################
# ZEO-Client Base
# -----------------------------------------------------------------------------
# Use this section to install and configure a ZEO client instance.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2instance
[client_base]

# The line below sets only the initial password. It will not change an
# existing password.
user = ${buildout:user}

# If we try to start as root, Zope will switch to the user below.
effective-user = ${buildout:effective-user}

# Change debug-mode to "on" to run in development mode. Starting in foreground
# (fg) mode is a better way to do this.
debug-mode = off

# Change verbose-security to "on" for detailed security errors while
# developing.
verbose-security = ${buildout:verbose-security}

# Change deprecation-warnings to "on" to get log warnings for deprecated
# usages.
deprecation-warnings = ${buildout:deprecation-warnings}

# Base locations
var = ${buildout:var-dir}
blob-storage = ${:var}/blobstorage

# Comment the next four lines out if you don't need automatic log rotation for
# event and access logs.
event-log-max-size = 5 MB
event-log-old-files = 5
access-log-max-size = 20 MB
access-log-old-files = 5

# If you want Zope to know about any additional eggs, list them here.
# e.g. eggs = ${buildout:eggs} my.package
eggs = ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = ${buildout:zcml}

products = ${buildout:directory}/products

# You may also control the environment variables for the instance.
environment-vars = ${buildout:environment-vars}

zeo-client = true
zeo-address = {{ plone_zeo_ip }}:{{ plone_zeo_port }}


# Shared blobs are much faster if we're on the same server. If not, turn it
# off.
{% if plone_install_zeoserver %}
shared-blob = on
{% else %}
shared-blob = off
{% endif %}

# Defer early binding to port; may improve load balancer behavior on restarts.
http-fast-listen = off

# Put the log, pid, lock files in var/client.
event-log = ${buildout:var-dir}/${:_buildout_section_name_}/event.log
z2-log    = ${buildout:var-dir}/${:_buildout_section_name_}/Z2.log
pid-file  = ${buildout:var-dir}/${:_buildout_section_name_}/${:_buildout_section_name_}.pid
lock-file = ${buildout:var-dir}/${:_buildout_section_name_}/${:_buildout_section_name_}.lock

zodb-cache-size = {{ plone_zodb_cache_size }}
zserver-threads = {{ plone_zserver_threads }}


###############################################################################
# ZEO-Clients
# -----------------------------------------------------------------------------
# Use this section to install and configure a ZEO client instance.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2instance
[client1]
<= client_base
recipe = plone.recipe.zope2instance
http-address = 127.0.0.1:{{ plone_client_base_port }}

{% for client in range(2, plone_client_count | int + 1) %}

[client{{ client }}]
<= client_base
recipe = plone.recipe.zope2instance
http-address = 127.0.0.1:{{ "%s" % (plone_client_base_port | int + loop.index) }}

{% endfor %}

[client_reserved]
<= client_base
recipe = plone.recipe.zope2instance
http-address = 127.0.0.1:{{ "%s" % (plone_client_reserved_port | int) }}


###############################################################################
# Precompiler
# -----------------------------------------------------------------------------
# This recipe is used in production installs to compile .py and .po files so
# that the daemon doesn't try to do it.
# For options see http://pypi.python.org/pypi/plone.recipe.precompiler
[precompiler]
recipe = plone.recipe.precompiler
eggs = ${buildout:eggs}
compile-mo-files = true
extra-paths = ${buildout:directory}/products


###############################################################################
# Permissions
# -----------------------------------------------------------------------------
# This recipe is used to set permissions for root mode installs
# For options see http://pypi.python.org/pypi/plone.recipe.command
[setpermissions]
recipe = plone.recipe.command
command =
    # Dummy references to force this to execute after referenced parts.
    echo ${backup:location} > /dev/null
    chmod 600 .installed.cfg
    # Make sure anything we've created in var is r/w by our group.
    find ${buildout:var-dir} -type d -exec chmod 700 {} \; 2> /dev/null
    # find ${buildout:var-dir} -type f -exec chmod 660 {} \; 2> /dev/null
    # find ${buildout:backups-dir} -type d -exec chmod 770 {} \; 2> /dev/null
    # find ${buildout:backups-dir} -type f -exec chmod 660 {} \; 2> /dev/null
    chmod 754 ${buildout:directory}/bin/*
update-command = ${:command}

{% if plone_sources %}

###############################################################################
# Development Packages
# -----------------------------------------------------------------------------
[sources]
{% for source in plone_sources %}
{{ source }}
{% endfor %}

{% endif %}
{% if plone_install_zeoserver %}

###############################################################################
# ZEO-Server
# -----------------------------------------------------------------------------
# Use this section to install and configure a Zope Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = {{ plone_zeo_ip }}:{{ plone_zeo_port }}

# If we try to start as root, Zope will switch to the user below.
effective-user = ${buildout:effective-user}

environment-vars = ${buildout:environment-vars}

# Set storage.
var = ${buildout:var-dir}
blob-storage = ${buildout:var-dir}/blobstorage

# Put the log, pid and socket files in var/zeoserver.
zeo-log     = ${buildout:var-dir}/zeoserver/zeoserver.log
pid-file    = ${buildout:var-dir}/zeoserver/zeoserver.pid
socket-name = ${buildout:var-dir}/zeoserver/zeo.zdsock

{% endif %}

###############################################################################
# Zope Python Interpreter
# -----------------------------------------------------------------------------
# Installs a zopepy python interpreter that runs with your full Zope
# environment
[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy


###############################################################################
# Versions Specification
# -----------------------------------------------------------------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
[versions]
buildout.sanitycheck = 1.0.2
collective.recipe.backup = 3.0.0
plone.recipe.command = 1.1
plone.recipe.precompiler = 0.6
{% if plone_version < '5.0' %}
setuptools = 7.0
{% endif %}
{% if plone_version < '4.3.8' %}
plone4.csrffixes = 1.0.8
plone.protect = 3.0.17
plone.keyring = 3.0.1
plone.locking = 2.0.9
{% endif %}
{% if plone_version >= '5.0' %}
# Use virtualenv's setuptools and zc.buildout
setuptools =
zc.buildout =
{% endif %}
{% if plone_additional_versions %}
{% for version in plone_additional_versions %}
{{ version}}
{% endfor %}
{% endif %}
