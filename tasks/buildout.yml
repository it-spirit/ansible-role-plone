---

###############################################################################
# Set local facts.
- name: Set convenience variables.
  set_fact:
    plone_virtualenv_path: '{{ plone_target_path }}/Python-{{ plone_python_version }}'
  tags:
    - plone
    - plone_buildout
    - plone_venv


###############################################################################
# Prepare Plone buildout.
- name: Check if buildout cache already exists.
  stat:
    path: '{{ plone_target_path }}/{{ plone_version }}/buildout-cache'
  register: buildout_cache
  tags:
    - plone
    - plone_buildout
    - plone_directories
    - plone_permissions

- name: Download buildout cache if needed.
  when: plone_buildout_cache_url and not buildout_cache.stat.exists
  unarchive:
    copy: false
    src: '{{ plone_buildout_cache_url }}'
    dest: '{{ plone_target_path }}/{{ plone_version }}'
    owner: '{{ plone_user }}'
    group: '{{ plone_group }}'
  ignore_errors: true
  register: buildout_cache_download
  tags:
    - plone
    - plone_buildout
    - plone_directories
    - plone_permissions

- name: Ensure buildout cache directory exists.
  file:
    path: '{{ plone_target_path }}/{{ plone_version }}/buildout-cache'
    state: directory
    owner: '{{ plone_user }}'
    group: '{{ plone_group }}'
  tags:
    - plone
    - plone_buildout
    - plone_directories

- name: Ensure buildout cache directories exist.
  file:
    path: '{{ plone_target_path }}/{{ plone_version }}/buildout-cache/{{ item }}'
    state: directory
    owner: '{{ plone_user }}'
    group: '{{ plone_group }}'
  with_items:
    - eggs
    - downloads
    - extends
  tags:
    - plone
    - plone_buildout
    - plone_directories

- name: Ensure correct ownership settings in buildout cache after re-download.
  when: buildout_cache_download.changed
  file:
    path: '{{ plone_target_path }}/{{ plone_version }}/buildout-cache'
    owner: '{{ plone_user }}'
    group: '{{ plone_group }}'
    recurse: yes
  tags:
    - plone
    - plone_buildout
    - plone_directories
    - plone_permissions

- name: Copy buildout skeleton.
  copy:
    src: buildout_skeleton/
    dest: '{{ plone_target_path }}'
    owner: '{{ plone_user }}'
    group: '{{ plone_group }}'
  tags:
    - plone
    - plone_buildout

- name: Copy buildout template.
  template:
    src: buildout.cfg.j2
    dest: '{{ plone_target_path }}/buildout.cfg'
    owner: '{{ plone_user }}'
    group: '{{ plone_group }}'
    backup: yes
  register: buildout_cfg_status
  tags:
    - plone
    - plone_buildout


###############################################################################
# Bootstrap and run buildout
- name: Check to see if buildout has already run.
  stat:
    path: '{{ plone_target_path }}/bin/client_reserved'
  register: buildout_run
  tags:
    - plone
    - plone_buildout

# Plone > 5.0; avoid bootstrap.py
- name: 'Install zc.buildout with pip for "{{ plone_instance_name }}".'
  pip:
    name: 'zc.buildout'
    state: 'present'
    virtualenv: '{{ plone_virtualenv_path }}'
  when: plone_version >= '5.0'
  become_user: '{{ plone_user }}'
  tags:
    - plone
    - plone_buildout

- name: 'Bootstrap buildout for "{{ plone_instance_name }}".'
  command: '{{ plone_virtualenv_path }}/bin/buildout bootstrap'
  args:
    creates: '{{ plone_target_path }}/bin/buildout'
    chdir: '{{ plone_target_path }}'
  when: plone_version >= '5.0'
  become_user: '{{ plone_user }}'
  tags:
    - plone
    - plone_buildout

# Plone < 5.0; use bootstrap.py
- name: 'Bootstrap buildout for "{{ plone_instance_name }}".'
  command: '{{ plone_virtualenv_path }}/bin/python buildout-bootstrap.py --setuptools-version=8.0.4'
  args:
    creates: '{{ plone_target_path }}/bin/buildout'
    chdir: '{{ plone_target_path }}'
  when: plone_version < '5.0'
  become_user: '{{ plone_user }}'
  tags:
    - plone
    - plone_buildout

- name: 'Run buildout for "{{ plone_instance_name }}".'
  when: plone_always_run_buildout or plone_autorun_buildout and (buildout_cfg_status.changed or not buildout_run.stat.exists)
  command: bin/buildout
  args:
    chdir: '{{ plone_target_path }}'
  become_user: '{{ plone_user }}'
  register: buildout
  notify:
    # - restart plone clients
    # - restart plone zeoserver
  tags:
    - plone
    - plone_buildout
